name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Build and test the fuzz-init tool
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake clang
      
      - name: Build fuzz-init
        run: cargo build --release
      
      - name: Run Rust tests
        run: cargo test
      
      - name: Check code with Clippy
        run: cargo clippy -- -D warnings
      
      - name: Check formatting
        run: cargo fmt -- --check
      
      # Quick smoke test with CPP cmake template
      - name: Test CPP CMake template
        run: |
          echo "=== Testing CPP CMake template ==="
          ./target/release/fuzz-init test-cpp-cmake \
            --language CPP \
            --integration cmake \
            --minimal
          
          echo "=== Checking generated structure ==="
          ls -la test-cpp-cmake/
          ls -la test-cpp-cmake/fuzz/
          
          echo "=== Building with CMake ==="
          cd test-cpp-cmake/fuzz
          cmake --preset fuzz-libfuzzer
          cmake --build --preset fuzz-libfuzzer
          
          echo "=== Verifying binary was created ==="
          if [ -f "build/libfuzzer/bin/fuzz_harness_1-libfuzzer" ]; then
            echo "✅ Binary successfully created"
            ls -la build/libfuzzer/bin/
          else
            echo "❌ Binary not found"
            exit 1
          fi
      
      # Test dev mode validation
      - name: Test dev mode
        run: |
          echo "=== Testing dev mode validation ==="
          ./target/release/fuzz-init --dev-mode \
            --language CPP \
            --integration cmake \
            --minimal \
            --dev-output ./scratch
          
          # Check exit code
          if [ $? -eq 0 ]; then
            echo "✅ Dev mode validation passed"
          else
            echo "❌ Dev mode validation failed"
            exit 1
          fi